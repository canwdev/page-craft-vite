import{r as e,M as t,bS as n,bT as r,bH as a}from"./index-D7imv_Md.js";function o(e){return new Promise(((t,n)=>{e.oncomplete=e.onsuccess=()=>t(e.result),e.onabort=e.onerror=()=>n(e.error)}))}let s;function u(){return s||(s=function(e,t){const n=indexedDB.open(e);n.onupgradeneeded=()=>n.result.createObjectStore(t);const r=o(n);return(e,n)=>r.then((r=>n(r.transaction(t,e).objectStore(t))))}("keyval-store","keyval")),s}function c(s,c,i={}){const{flush:l="pre",deep:d=!0,shallow:f=!1,onError:w=(e=>{console.error(e)}),writeDefaults:p=!0}=i,h=e(!1),y=(f?t:e)(c),v=n(c);async function b(){try{null==y.value?await function(e,t=u()){return t("readwrite",(t=>(t.delete(e),o(t.transaction))))}(s):await function(e,t,n=u()){return n("readwrite",(n=>new Promise(((r,a)=>{n.get(e).onsuccess=function(){try{n.put(t(this.result),e),r(o(n.transaction))}catch(s){a(s)}}}))))}(s,(()=>a(y.value)))}catch(e){w(e)}}!async function(){try{const e=await function(e,t=u()){return t("readonly",(t=>o(t.get(e))))}(s);void 0===e?null!=v&&p&&await function(e,t,n=u()){return n("readwrite",(n=>(n.put(t,e),o(n.transaction))))}(s,v):y.value=e}catch(e){w(e)}h.value=!0}();const{pause:m,resume:g}=r(y,(()=>b()),{flush:l,deep:d});return{set:async function(e){m(),y.value=e,await b(),g()},isFinished:h,data:y}}export{c as u};
